// Copyright (c) 2017-2020 Xiamen Yaji Software Co., Ltd.
//注意：需要手动通过ts代码设定EdgeDetectionMat中的_ScreenWidth和_ScreenHeight为屏幕分辨率
CCEffect %{
  techniques:
  - passes:
    #模糊pass，unity中用两个pass，但是在cocos中写到一起只有第一个会生效，所以合并2个pass代码到一起，还能提高性能
    - vert: vs:vert
      frag: fs:frag
      pass: post-process #后处理的专用pass类型
      properties: &props
        #低版本的Opengl不支持类似Unity里的_MainTex_TexelSize，所以需要手动传分辨率
        _ScreenWidth: { value: 1280.0 }
        _ScreenHeight: { value: 720.0 }
        _MainTex:    { value: white }
        

}%

CCProgram vs %{
  precision highp float;
  
  #include <builtin/uniforms/cc-global>
  #include <builtin/uniforms/cc-local>

  in vec3 a_position;
  in vec2 a_texCoord;

  out vec4 v_uv;

  uniform ConstantV {
    float _ScreenWidth;
    float _ScreenHeight;
    float _LuminanceThreshold;
  };

  vec4 vert () {
    //顶点处理比较省事，直接输出即可，无需变换空间
    vec4 vertex = vec4(a_position, 1.0);
    vec4 texSize = vec4(1.0/_ScreenWidth, 1.0/_ScreenHeight, _ScreenWidth, _ScreenHeight);
    vec4 abc = cc_screenSize;
    v_uv.zw = a_texCoord;
    v_uv.xy = a_texCoord;

    return vertex;
  }

}%


CCProgram fs %{
  precision highp float;

  #include <legacy/output>
  #include <../cc-cg>

  in vec4 v_uv;


  //设置blit采样频率，见 https://docs.cocos.com/creator/manual/zh/render-pipeline/custom-pipeline.html
  //inputTexture是cocos默认的blit截图，照抄即可
  #pragma rate inputTexture pass
  uniform sampler2D inputTexture;
  uniform sampler2D _MainTex;

  vec4 frag () {
    return texture(_MainTex, v_uv.xy) + texture(inputTexture, v_uv.zw);
  }
}%